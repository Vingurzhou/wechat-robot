syntax = "v1"

type Request {
	Name string `path:"name,options=you|me"`
}

type Response {
	Message string `json:"message"`
}

type CallBackReq {
	TypeName string `json:"TypeName"`
	Appid    string `json:"Appid"`
	Data     Data   `json:"Data"`
	Wxid     string `json:"Wxid"`
}

type Data {
	MsgID        int64   `json:"MsgId"`
	FromUserName Content `json:"FromUserName"`
	ToUserName   Content `json:"ToUserName"`
	MsgType      int64   `json:"MsgType"`
	Content      Content `json:"Content"`
	Status       int64   `json:"Status"`
	ImgStatus    int64   `json:"ImgStatus"`
	ImgBuf       ImgBuf  `json:"ImgBuf"`
	CreateTime   int64   `json:"CreateTime"`
	MsgSource    string  `json:"MsgSource"`
	PushContent  string  `json:"PushContent"`
	NewMsgID     float64 `json:"NewMsgId"`
	MsgSeq       int64   `json:"MsgSeq"`
}

type Content {
	String string `json:"string"`
}

type ImgBuf {
	ILen int64 `json:"iLen"`
}

/////////////////////////////////////////////////////////////////////////////////////
service bot-api {
	@handler BotHandler
	get /from/:name (Request) returns (Response)
}

@server (
	prefix: /v1
	// group:      msg
	middleware: CallbackMiddleware
)
service bot-api {
	@handler CallbackHandler
	post /callback (CallBackReq)
}

